<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:defaults="clr-namespace:Snijderman.Common.Wpf.Themes.Default">

   <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ForegroundBrushKey}}" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
               <Grid x:Name="LayoutRoot" Margin="{TemplateBinding Padding}">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Border x:Name="CheckBorder" Width="16" Height="16" Margin="0,1,4,0" Background="{DynamicResource {x:Static defaults:Brushes.ButtonBackgroundBrushKey}}" BorderBrush="{DynamicResource {x:Static defaults:Brushes.ButtonBorderBrushKey}}" BorderThickness="1">
                     <Rectangle x:Name="CheckMark" Width="8" Height="8" Margin="4" Fill="{TemplateBinding Foreground}" Visibility="Collapsed"/>
                  </Border>
                  <ContentPresenter Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextDisabledBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBackgroundHoverBrushKey}}" />
                     <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBorderHoverBrushKey}}" />
                     <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextHoverBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBackgroundPressedBrushKey}}" />
                     <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBorderPressedBrushKey}}" />
                     <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextPressedBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsFocused" Value="true">
                     <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.AccentBrushKey}}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>
