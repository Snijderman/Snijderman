<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:defaults="clr-namespace:Snijderman.Common.Wpf.Themes.Default"
                    xmlns:controls="clr-namespace:Snijderman.Common.Wpf.Controls">

   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/Snijderman.Common.Wpf;component/Themes/Default/Styles/Converters.xaml" />
   </ResourceDictionary.MergedDictionaries>

   <Style TargetType="controls:ModernButton">
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonTextBrushKey}}" />
      <Setter Property="Padding" Value="1" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="controls:ModernButton">
               <Grid x:Name="grid" Background="Transparent" Margin="{TemplateBinding Padding}" >
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto" />
                     <ColumnDefinition />
                  </Grid.ColumnDefinitions>

                  <Grid Width="{TemplateBinding EllipseDiameter}"
                              Height="{TemplateBinding EllipseDiameter}">
                     <Ellipse x:Name="ellipse"
                                     Stroke="{DynamicResource {x:Static defaults:Brushes.ModernButtonBorderBrushKey}}"
                                     StrokeThickness="{TemplateBinding EllipseStrokeThickness}"
                                     VerticalAlignment="Stretch" />
                     <Path x:Name="icon"
                                  Data="{TemplateBinding IconData}" 
                                  Width="{TemplateBinding IconWidth}"
                                  Height="{TemplateBinding IconHeight}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                  </Grid>
                  <Grid Grid.Column="1" >
                     <TextBlock DataContext="{TemplateBinding Content}"
                                       Visibility="{Binding Converter={StaticResource NullOrEmptyStringToVisibilityConverter}, ConverterParameter=inverse}"
                                       Text="{Binding Converter={StaticResource ToLowerConverter}}"
                                       TextTrimming="CharacterEllipsis"
                                       Foreground="{TemplateBinding Foreground}"
                                       Margin="4,-1,0,0"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </Grid>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonTextHoverBrushKey}}" />
                     <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonBorderHoverBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonTextPressedBrushKey}}" />
                     <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonBorderPressedBrushKey}}" />
                     <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonIconBackgroundPressedBrushKey}}" />
                     <Setter TargetName="icon" Property="Fill" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonIconForegroundPressedBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonTextDisabledBrushKey}}" />
                     <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource {x:Static defaults:Brushes.ModernButtonBorderDisabledBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsFocused" Value="true">
                     <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource {x:Static defaults:Brushes.AccentBrushKey}}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>