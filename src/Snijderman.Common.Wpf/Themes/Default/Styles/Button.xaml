<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:defaults="clr-namespace:Snijderman.Common.Wpf.Themes.Default">

   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/Snijderman.Common.Wpf;component/Themes/Default/Styles/Converters.xaml" />
   </ResourceDictionary.MergedDictionaries>

   <Style x:Key="{x:Static defaults:Styles.SystemButtonBaseKey}" TargetType="ButtonBase">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="true">
                  <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.AlertButtonKey}" TargetType="ButtonBase" BasedOn="{StaticResource {x:Static defaults:Styles.SystemButtonBaseKey}}">
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Margin" Value="8"/>
      <Setter Property="Padding" Value="4"/>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Opacity" Value=".7" />
         </Trigger>
         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Opacity" Value=".4" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.SystemButtonKey}" TargetType="ButtonBase" BasedOn="{StaticResource {x:Static defaults:Styles.SystemButtonBaseKey}}">
      <Setter Property="Width" Value="{DynamicResource SystemButtonWidth}" />
      <Setter Property="Height" Value="{DynamicResource SystemButtonHeight}" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextBrushKey}}"/>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{DynamicResource SystemButtonBackgroundOnMoseOver}" />
            <Setter Property="Foreground" Value="{DynamicResource SystemButtonForegroundOnMoseOver}"/>
         </Trigger>
         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" Value="{DynamicResource SystemButtonBackgroundIsPressed}" />
            <Setter Property="Foreground" Value="{DynamicResource SystemButtonForegroundIsPressed}" />
         </Trigger>
         <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextDisabledBrushKey}}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.SystemCloseButtonKey}" TargetType="ButtonBase" BasedOn="{StaticResource {x:Static defaults:Styles.SystemButtonKey}}">
      <Setter Property="Width" Value="{DynamicResource CloseButtonWidth}" />
      <Setter Property="Background" Value="{DynamicResource CloseButtonBackground}" />
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{DynamicResource CloseButtonBackgroundOnMoseOver}" />
            <Setter Property="Foreground" Value="{DynamicResource CloseButtonForegroundOnMoseOver}"/>
         </Trigger>
         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" Value="{DynamicResource CloseButtonBackgroundIsPressed}" />
            <Setter Property="Foreground" Value="{DynamicResource CloseButtonForegroundIsPressed}" />
         </Trigger>
         <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextDisabledBrushKey}}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.SystemButtonLinkKey}" TargetType="ButtonBase" BasedOn="{StaticResource {x:Static defaults:Styles.SystemButtonBaseKey}}" >
      <Setter Property="Foreground" Value="{DynamicResource LinkButtonText}"/>
      <Setter Property="Width" Value="NaN" />
      <Setter Property="Height" Value="NaN" />
      <Setter Property="FontFamily" Value="Segoe UI" />
      <Setter Property="FontSize" Value="11" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="true">
                  <TextBlock DataContext="{TemplateBinding Content}"
                                   Text="{Binding Converter={StaticResource ToUpperConverter}}"
                                   Margin="{TemplateBinding Padding}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextHover}"/>
         </Trigger>
         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextPressed}" />
         </Trigger>
         <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextDisabled}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.BaseButtonKey}" TargetType="{x:Type ButtonBase}">
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBackgroundBrushKey}}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBorderBrushKey}}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextBrushKey}}"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="16,3,16,5"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                  <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextDisabledBrushKey}}"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBackgroundHoverBrushKey}}" />
                     <Setter Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBorderHoverBrushKey}}"/>
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextHoverBrushKey}}"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBackgroundPressedBrushKey}}" />
                     <Setter Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.ButtonBorderPressedBrushKey}}"/>
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ButtonTextPressedBrushKey}}"/>
                  </Trigger>
                  <Trigger Property="IsFocused" Value="true">
                     <Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource {x:Static defaults:Brushes.AccentBrushKey}}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.WindowButtonKey}" TargetType="Button">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.ForegroundBrushKey}}"/>
      <Setter Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.WindowButtonHighlightBrushKey}}"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Width" Value="45"/>
      <Setter Property="Height" Value="30"/>
      <Setter Property="Margin" Value="1, 0, 0, 1"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="TextElement.FontFamily" Value="Segoe MDL2 Assets"/>
      <Setter Property="TextElement.FontSize" Value="10"/>
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0"/>

                  <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RenderOptions.ClearTypeHint="Auto"
                                          TextOptions.TextRenderingMode="Auto"
                                          TextOptions.TextFormattingMode="Display"/>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Trigger.EnterActions>
                        <BeginStoryboard>
                           <Storyboard>
                              <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Border"
                                                         To="1"
                                                         Duration="0:0:0.025"/>
                           </Storyboard>
                        </BeginStoryboard>
                     </Trigger.EnterActions>
                     <Trigger.ExitActions>
                        <BeginStoryboard>
                           <Storyboard>
                              <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Border"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                           </Storyboard>
                        </BeginStoryboard>
                     </Trigger.ExitActions>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource {x:Static defaults:Brushes.DisabledForegroundBrushKey}}"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>

      <Style.Triggers>

         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" Value="{DynamicResource {x:Static defaults:Brushes.WindowButtonInteractionBrushKey}}"/>
         </Trigger>

         <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="False">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static defaults:Brushes.DisabledForegroundBrushKey}}"/>
         </DataTrigger>

         <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="Maximized">
            <Setter Property="Height" Value="22"/>
         </DataTrigger>

      </Style.Triggers>
   </Style>

   <Style x:Key="{x:Static defaults:Styles.WindowCloseButtonKey}" TargetType="Button" BasedOn="{StaticResource {x:Static defaults:Styles.WindowButtonKey}}">
      <Setter Property="Background" Value="#e81123"/>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Foreground" Value="#ffffff"/>
         </Trigger>
         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" Value="#f1707a"/>
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Static defaults:Styles.BaseButtonKey}}" TargetType="{x:Type ToggleButton}"/>

   <Style x:Key="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Static defaults:Styles.BaseButtonKey}}" TargetType="{x:Type RepeatButton}">
      <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
   </Style>

   <Style x:Key="{x:Type Button}" BasedOn="{StaticResource {x:Static defaults:Styles.BaseButtonKey}}" TargetType="{x:Type Button}"/>

</ResourceDictionary>